@keyframes spin{0%{transform:rotate(0turn)}to{transform:rotate(1turn)}}.wp-block{font-family:open-sans,sans-serif;font-style:normal;font-weight:400}.content-tab{border:0;cursor:pointer;grid-row:1/2;height:auto;padding:0;position:relative;width:100%}@media (min-width:768px){.content-tab{aspect-ratio:4/3;margin-top:2rem}}.content-tab__image-wrapper{aspect-ratio:4/3;height:100%;overflow:hidden;position:relative;width:100%}.content-tab__image-wrapper img{height:100%;-o-object-fit:cover;object-fit:cover;transition:1s;transition-timing-function:cubic-bezier(.165,.84,.44,1);width:100%;will-change:transform}.content-tab__heading-image{left:50%;position:absolute;top:50%;transform:translate(-50%,-50%)}@media (min-width:768px){.content-tab__heading-image{top:35%;transition:1s;transition-timing-function:cubic-bezier(.165,.84,.44,1);will-change:transform}}.content-tab:hover .content-tab__image-wrapper img{transform:scale(1.05)}.content-tab:hover .content-tab__heading-image{transform:translate(-50%,-50%) scale(1.15)}.content-tab__text-wrapper{align-items:center;background:rgba(var(--rgb-dark),.8);bottom:0;color:#fff;display:none;flex-direction:column;left:0;padding:1.5rem 1rem;position:absolute;width:100%}@media (min-width:768px){.content-tab__text-wrapper{display:flex}}.content-tab__text{display:block;margin-bottom:1rem}.content-tab__icon-wrapper{border:2px solid #fff;border-radius:50%;display:block;height:30px;position:relative;width:30px}.content-tab__icon-wrapper svg{left:50%;position:absolute;top:50%;transform:translate(-50%,-50%)}.content-tab-content{grid-column:1/4;grid-row:2/3;padding:0 1rem}.content-tab-content>*{margin-top:0}.content-tab-content.init{display:none;opacity:1}.content-tab-content.show{display:block;height:var(--height)}@media (min-width:768px){.content-tab-content{padding-top:4rem}.content-tab-content.init{display:none;height:auto;transition:none}.content-tab-content.show{display:block}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
